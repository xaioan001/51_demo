C51 COMPILER V9.60.0.0   STC8G_H_TIMER                                                     09/13/2025 19:44:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STC8G_H_TIMER
OBJECT MODULE PLACED IN .\Objects\STC8G_H_Timer.obj
COMPILER INVOKED BY: D:\work\KEIL\ARM\C51\BIN\C51.EXE STC8HLib\STC8G_H_Timer.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\APP;.\D
                    -RIVER;.\STC8HLib) DEBUG OBJECTEXTEND PRINT(.\Listings\STC8G_H_Timer.lst) TABS(2) OBJECT(.\Objects\STC8G_H_Timer.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "STC8G_H_Timer.h"
  14          
  15          //========================================================================
  16          // º¯Êý: u8 Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  17          // ÃèÊö: ¶¨Ê±Æ÷³õÊ¼»¯³ÌÐò.
  18          // ²ÎÊý: TIMx: ½á¹¹²ÎÊý,Çë²Î¿¼timer.hÀïµÄ¶¨Òå.
  19          // ·µ»Ø: ³É¹¦·µ»Ø SUCCESS, ´íÎó·µ»Ø FAIL.
  20          // °æ±¾: V1.0, 2012-10-22
  21          //========================================================================
  22          u8  Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  23          {
  24   1        if(TIM == Timer0)
  25   1        {
  26   2          Timer0_Stop();    //Í£Ö¹¼ÆÊý
  27   2          if(TIMx->TIM_Mode > TIM_16BitAutoReloadNoMask)  return FAIL;  //´íÎó
  28   2          TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3:
             - ²»¿ÉÆÁ±Î16Î»×Ô¶¯ÖØ×°
  29   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  30   2          Timer0_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  31   2          Timer0_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  32   2          T0_Load(TIMx->TIM_Value);
  33   2          Timer0_Run(TIMx->TIM_Run);
  34   2          return  SUCCESS;    //³É¹¦
  35   2        }
  36   1      
  37   1        if(TIM == Timer1)
  38   1        {
  39   2          Timer1_Stop();    //Í£Ö¹¼ÆÊý
  40   2          if(TIMx->TIM_Mode > TIM_16BitAutoReloadNoMask)  return FAIL;  //´íÎó
  41   2          TMOD = (TMOD & ~0x30) | (TIMx->TIM_Mode << 4);  //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯Ö
             -Ø×°, 3: Í£Ö¹¹¤×÷
  42   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  43   2          Timer1_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  44   2          Timer1_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  45   2          T1_Load(TIMx->TIM_Value);
  46   2          Timer1_Run(TIMx->TIM_Run);
  47   2          return  SUCCESS;    //³É¹¦
  48   2        }
  49   1      
  50   1        if(TIM == Timer2)   //Timer2,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  51   1        {
  52   2          Timer2_Stop();  //Í£Ö¹¼ÆÊý
C51 COMPILER V9.60.0.0   STC8G_H_TIMER                                                     09/13/2025 19:44:22 PAGE 2   

  53   2          Timer2_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  54   2          Timer2_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  55   2      
  56   2          T2_Load(TIMx->TIM_Value);
  57   2              TM2PS = TIMx->TIM_PS;
  58   2          Timer2_Run(TIMx->TIM_Run);
  59   2          return  SUCCESS;    //³É¹¦
  60   2        }
  61   1      
  62   1        if(TIM == Timer3)   //Timer3,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  63   1        {
  64   2          Timer3_Stop();  //Í£Ö¹¼ÆÊý
  65   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  66   2          Timer3_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  67   2          Timer3_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  68   2      
  69   2          T3_Load(TIMx->TIM_Value);
  70   2              TM3PS = TIMx->TIM_PS;
  71   2          Timer3_Run(TIMx->TIM_Run);
  72   2          return  SUCCESS;    //³É¹¦
  73   2        }
  74   1      
  75   1        if(TIM == Timer4)   //Timer3,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  76   1        {
  77   2          Timer4_Stop();  //Í£Ö¹¼ÆÊý
  78   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return FAIL;
  79   2          Timer4_CLK_Select(TIMx->TIM_ClkSource); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ, ¶¨Ê±12T/1T
  80   2          Timer4_CLK_Output(TIMx->TIM_ClkOut);    //Êä³öÊ±ÖÓÊ¹ÄÜ
  81   2      
  82   2          T4_Load(TIMx->TIM_Value);
  83   2              TM4PS = TIMx->TIM_PS;
  84   2          Timer4_Run(TIMx->TIM_Run);
  85   2          return  SUCCESS;    //³É¹¦
  86   2        }
  87   1        return FAIL;  //´íÎó
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    648    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
