C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       09/18/2025 19:01:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STC8G_H_I2C
OBJECT MODULE PLACED IN .\Objects\STC8G_H_I2C.obj
COMPILER INVOKED BY: D:\work\KEIL\ARM\C51\BIN\C51.EXE ..\TEST\STC8HLib\STC8G_H_I2C.c LARGE OPTIMIZE(8,SPEED) BROWSE INCD
                    -IR(.\APP;.\DRIVER;.\STC8HLib) DEBUG OBJECTEXTEND PRINT(.\Listings\STC8G_H_I2C.lst) TABS(2) OBJECT(.\Objects\STC8G_H_I2C.
                    -obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "STC8G_H_I2C.h"
  14          
  15          u8 xdata I2C_Buffer[I2C_BUF_LENTH];
  16          
  17          //========================================================================
  18          // 函数: void I2C_Init(I2C_InitTypeDef *I2Cx)
  19          // 描述: I2C初始化程序.
  20          // 参数: I2Cx: 结构参数,请参考I2C.h里的定义.
  21          // 返回: none.
  22          // 版本: V1.0, 2012-11-22
  23          //========================================================================
  24          void I2C_Init(I2C_InitTypeDef *I2Cx)
  25          {
  26   1        if(I2Cx->I2C_Mode == I2C_Mode_Master)
  27   1        {
  28   2          I2C_Master();     //设为主机  
  29   2          I2CMSST = 0x00;   //清除I2C主机状态寄存器
  30   2          I2C_SetSpeed(I2Cx->I2C_Speed);
  31   2          if(I2Cx->I2C_MS_WDTA == ENABLE)   I2C_WDTA_EN();  //使能自动发送
  32   2          else                  I2C_WDTA_DIS(); //禁止自动发送
  33   2        }
  34   1        else
  35   1        {
  36   2          I2C_Slave();  //设为从机
  37   2          I2CSLST = 0x00;   //清除I2C从机状态寄存器
  38   2          I2C_Address(I2Cx->I2C_SL_ADR);
  39   2          if(I2Cx->I2C_SL_MA == ENABLE)   I2C_MATCH_EN(); //从机地址比较功能，只接受相匹配地址
  40   2          else                  I2C_MATCH_DIS();  //禁止从机地址比较功能，接受所有设备地址
  41   2        }
  42   1        
  43   1        I2C_Function(I2Cx->I2C_Enable);
  44   1      }
  45          
  46          //========================================================================
  47          // 函数: u8 Get_MSBusy_Status (void)
  48          // 描述: 获取主机忙碌状态.
  49          // 参数: none.
  50          // 返回: 主机忙碌状态.
  51          // 版本: V1.0, 2012-11-22
  52          //========================================================================
  53          u8 Get_MSBusy_Status(void)
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       09/18/2025 19:01:34 PAGE 2   

  54          {
  55   1        return (I2CMSST & 0x80);
  56   1      }
  57          
  58          //========================================================================
  59          // 函数: void Wait (void)
  60          // 描述: 等待主机模式I2C控制器执行完成I2CMSCR.
  61          // 参数: none.
  62          // 返回: none.
  63          // 版本: V1.0, 2012-11-22
  64          //========================================================================
  65          void Wait()
  66          {
  67   1        while (!(I2CMSST & 0x40));
  68   1        I2CMSST &= ~0x40;
  69   1      }
  70          
  71          //========================================================================
  72          // 函数: void Start (void)
  73          // 描述: I2C总线起始函数.
  74          // 参数: none.
  75          // 返回: none.
  76          // 版本: V1.0, 2020-09-15
  77          //========================================================================
  78          void Start()
  79          {
  80   1        I2CMSCR = 0x01;                         //发送START命令
  81   1        Wait();
  82   1      }
  83          
  84          //========================================================================
  85          // 函数: void SendData (char dat)
  86          // 描述: I2C发送一个字节数据函数.
  87          // 参数: 发送的数据.
  88          // 返回: none.
  89          // 版本: V1.0, 2020-09-15
  90          //========================================================================
  91          void SendData(char dat)
  92          {
  93   1        I2CTXD = dat;                           //写数据到数据缓冲区
  94   1        I2CMSCR = 0x02;                         //发送SEND命令
  95   1        Wait();
  96   1      }
  97          
  98          //========================================================================
  99          // 函数: void RecvACK (void)
 100          // 描述: I2C获取ACK函数.
 101          // 参数: none.
 102          // 返回: none.
 103          // 版本: V1.0, 2020-09-15
 104          //========================================================================
 105          void RecvACK()
 106          {
 107   1        I2CMSCR = 0x03;                         //发送读ACK命令
 108   1        Wait();
 109   1      }
 110          
 111          //========================================================================
 112          // 函数: char RecvData (void)
 113          // 描述: I2C读取一个字节数据函数.
 114          // 参数: none.
 115          // 返回: 读取数据.
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       09/18/2025 19:01:34 PAGE 3   

 116          // 版本: V1.0, 2020-09-15
 117          //========================================================================
 118          char RecvData()
 119          {
 120   1        I2CMSCR = 0x04;                         //发送RECV命令
 121   1        Wait();
 122   1        return I2CRXD;
 123   1      }
 124          
 125          //========================================================================
 126          // 函数: void SendACK (void)
 127          // 描述: I2C发送ACK函数.
 128          // 参数: none.
 129          // 返回: none.
 130          // 版本: V1.0, 2020-09-15
 131          //========================================================================
 132          void SendACK()
 133          {
 134   1        I2CMSST = 0x00;                         //设置ACK信号
 135   1        I2CMSCR = 0x05;                         //发送ACK命令
 136   1        Wait();
 137   1      }
 138          
 139          //========================================================================
 140          // 函数: void SendNAK (void)
 141          // 描述: I2C发送NAK函数.
 142          // 参数: none.
 143          // 返回: none.
 144          // 版本: V1.0, 2020-09-15
 145          //========================================================================
 146          void SendNAK()
 147          {
 148   1        I2CMSST = 0x01;                         //设置NAK信号
 149   1        I2CMSCR = 0x05;                         //发送ACK命令
 150   1        Wait();
 151   1      }
 152          
 153          //========================================================================
 154          // 函数: void Stop (void)
 155          // 描述: I2C总线停止函数.
 156          // 参数: none.
 157          // 返回: none.
 158          // 版本: V1.0, 2020-09-15
 159          //========================================================================
 160          void Stop()
 161          {
 162   1        I2CMSCR = 0x06;                         //发送STOP命令
 163   1        Wait();
 164   1      }
 165          
 166          //========================================================================
 167          // 函数: void SendCmdData (u8 cmd, u8 dat)
 168          // 描述: I2C发送一个字节数据函数.
 169          // 参数: 命令/数据.
 170          // 返回: none.
 171          // 版本: V1.0, 2020-09-15
 172          //========================================================================
 173          void SendCmdData(u8 cmd, u8 dat)
 174          {
 175   1        I2CTXD = dat;                           //写数据到数据缓冲区
 176   1        I2CMSCR = cmd;                          //设置命令
 177   1        Wait();
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       09/18/2025 19:01:34 PAGE 4   

 178   1      }
 179          
 180          //========================================================================
 181          // 函数: void I2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
 182          // 描述: I2C写入数据函数.
 183          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p写入数据存储位置, number写入数据个数.
 184          // 返回: none.
 185          // 版本: V1.0, 2020-09-15
 186          //========================================================================
 187          void I2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)  /*  DeviceAddress,WordAddress,First Data 
             -Address,Byte lenth   */
 188          {
 189   1        Start();                                //发送起始命令
 190   1        SendData(dev_addr);                     //发送设备地址+写命令
 191   1        RecvACK();
 192   1        SendData(mem_addr);                     //发送存储地址
 193   1        RecvACK();
 194   1        do
 195   1        {
 196   2          SendData(*p++);
 197   2          RecvACK();
 198   2        }
 199   1        while(--number);
 200   1        Stop();                                 //发送停止命令
 201   1      }
 202          
 203          //========================================================================
 204          // 函数: void I2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
 205          // 描述: I2C读取数据函数.
 206          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p读取数据存储位置, number读取数据个数.
 207          // 返回: none.
 208          // 版本: V1.0, 2020-09-15
 209          //========================================================================
 210          void I2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)   /*  DeviceAddress,WordAddress,First Data 
             -Address,Byte lenth   */
 211          {
 212   1        Start();                                //发送起始命令
 213   1        SendData(dev_addr);                     //发送设备地址+写命令
 214   1        RecvACK();
 215   1        SendData(mem_addr);                     //发送存储地址
 216   1        RecvACK();
 217   1        Start();                                //发送起始命令
 218   1        SendData(dev_addr|1);                   //发送设备地址+读命令
 219   1        RecvACK();
 220   1        do
 221   1        {
 222   2          *p = RecvData();
 223   2          p++;
 224   2          if(number != 1) SendACK();          //send ACK
 225   2        }
 226   1        while(--number);
 227   1        SendNAK();                              //send no ACK 
 228   1        Stop();                                 //发送停止命令
 229   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       09/18/2025 19:01:34 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
