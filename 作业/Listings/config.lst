C51 COMPILER V9.60.0.0   CONFIG                                                            09/18/2025 19:01:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CONFIG
OBJECT MODULE PLACED IN .\Objects\config.obj
COMPILER INVOKED BY: D:\work\KEIL\ARM\C51\BIN\C51.EXE APP\config.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\APP;.\DRIVER;
                    -.\STC8HLib) DEBUG OBJECTEXTEND PRINT(.\Listings\config.lst) TABS(2) OBJECT(.\Objects\config.obj)

line level    source

   1          #include  "STC8G_H_GPIO.h"
   2          #include  "STC8G_H_Exti.h"
   3          #include  "STC8G_H_NVIC.h"
   4          #include  "STC8G_H_Timer.h"
   5          #include  "STC8G_H_Switch.h"
   6          #include "STC8G_H_UART.h"
   7          #include  "STC8G_H_ADC.h"
   8          #include  "STC8G_H_I2C.h"
   9          #include  "STC8H_RTC.h"
  10          #include  "STC8G_H_SPI.h"
  11          void  GPIO_config(void)
  12          {
  13   1        GPIO_InitTypeDef  GPIO_InitStructure;   //½á¹¹¶¨Òå
  14   1      
  15   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;
  16   1        GPIO_InitStructure.Mode = GPIO_PullUp;
  17   1        GPIO_Inilize(GPIO_P5,&GPIO_InitStructure);
  18   1        GPIO_Inilize(GPIO_P1,&GPIO_InitStructure);
  19   1        GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);
  20   1        GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);
  21   1        GPIO_Inilize(GPIO_P4,&GPIO_InitStructure);
  22   1        GPIO_Inilize(GPIO_P6,&GPIO_InitStructure);
  23   1        GPIO_Inilize(GPIO_P7,&GPIO_InitStructure);
  24   1      //  GPIO_InitStructure.Pin  = GPIO_Pin_All;   //Ö¸¶¨Òª³õÊ¼»¯µÄIO, GPIO_Pin_0 ~ GPIO_Pin_7
  25   1      //  GPIO_InitStructure.Mode = GPIO_PullUp;    //Ö¸¶¨IOµÄÊäÈë»òÊä³ö·½Ê½,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPI
             -O_OUT_PP
  26   1        GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //³õÊ¼»¯
  27   1        P1_MODE_IN_HIZ(GPIO_Pin_0|GPIO_Pin_1);    //P1.0~P1.7 ÉèÖÃÎª¸ß×èÊäÈë
  28   1        P5_MODE_IN_HIZ(GPIO_Pin_0|GPIO_Pin_1);    //P1.0~P1.7 ÉèÖÃÎª¸ß×èÊäÈë
  29   1        P2_MODE_IN_HIZ(GPIO_Pin_7);
  30   1      }
  31          /******************** INTÅäÖÃ ********************/
  32          void  Exti_config(void)
  33          {
  34   1        EXTI_InitTypeDef  Exti_InitStructure;             //½á¹¹¶¨Òå
  35   1      
  36   1        //Íâ²¿ÖÐ¶Ï0
  37   1        Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//ÖÐ¶ÏÄ£Ê½,   EXT_MODE_RiseFall,EXT_MODE_Fall
  38   1        Ext_Inilize(EXT_INT0,&Exti_InitStructure);        //³õÊ¼»¯
  39   1        NVIC_INT0_Init(ENABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Prio
             -rity_2,Priority_3
  40   1      
  41   1        //Íâ²¿ÖÐ¶Ï1
  42   1        
  43   1        Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//ÖÐ¶ÏÄ£Ê½,   EXT_MODE_RiseFall,EXT_MODE_Fall
  44   1        Ext_Inilize(EXT_INT1,&Exti_InitStructure);        //³õÊ¼»¯
  45   1        NVIC_INT2_Init(ENABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Prio
             -rity_2,Priority_3
  46   1      
  47   1        //Íâ²¿ÖÐ¶Ï2
  48   1        
  49   1      //  Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//ÖÐ¶ÏÄ£Ê½,   EXT_MODE_RiseFall,EXT_MODE_Fall
  50   1      //  Ext_Inilize(EXT_INT2,&Exti_InitStructure);        //³õÊ¼»¯
  51   1      //  NVIC_INT3_Init(ENABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pr
C51 COMPILER V9.60.0.0   CONFIG                                                            09/18/2025 19:01:26 PAGE 2   

             -iority_2,Priority_3
  52   1      //  //Íâ²¿ÖÐ¶Ï3
  53   1      //  
  54   1      //  Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//ÖÐ¶ÏÄ£Ê½,   EXT_MODE_RiseFall,EXT_MODE_Fall
  55   1      //  Ext_Inilize(EXT_INT3,&Exti_InitStructure);        //³õÊ¼»¯
  56   1      //  NVIC_INT4_Init(ENABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
  57   1        
  58   1        NVIC_INT2_Init(ENABLE,NULL);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÎÞÓÅÏÈ¼¶
  59   1        NVIC_INT3_Init(ENABLE,NULL);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÎÞÓÅÏÈ¼¶
  60   1        NVIC_INT4_Init(ENABLE,NULL);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÎÞÓÅÏÈ¼¶
  61   1        
  62   1        P3INTE|=0x30;
  63   1      
  64   1      }
  65          void  Timer_config(void)
  66          {
  67   1        TIM_InitTypeDef   TIM_InitStructure;            //½á¹¹¶¨Òå
  68   1      
  69   1        //¶¨Ê±Æ÷0×ö16Î»×Ô¶¯ÖØ×°, ÊµÏÖ500ms¶¨Ê±£¬¶¨Ê±1ms/fre=1000,ÖÐ¶Ï500´Î
  70   1        TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
  71   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;   //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_E
             -xt
  72   1        TIM_InitStructure.TIM_ClkOut    = DISABLE;        //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  73   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 1000UL);   //³õÖµ,
  74   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
  75   1        Timer_Inilize(Timer0,&TIM_InitStructure);       //³õÊ¼»¯Timer0    Timer0,Timer1,Timer2,Timer3,Timer4
  76   1        NVIC_Timer0_Init(ENABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
  77   1      
  78   1        //¶¨Ê±Æ÷1×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª10000HZ£¬ÖÐ¶Ïº¯Êý´ÓP6.6È¡·´Êä³ö5KHZ·½²¨ÐÅºÅ.
  79   1        TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_T1Stop
  80   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;   //Ö¸¶¨Ê±ÖÓÔ´, TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_Ext
  81   1        TIM_InitStructure.TIM_ClkOut    = DISABLE;        //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  82   1        TIM_InitStructure.TIM_Value     =65536UL - (MAIN_Fosc / 1000UL);// 65536UL - (MAIN_Fosc / 10000);     //³õÖ
             -µ,
  83   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
  84   1        Timer_Inilize(Timer1,&TIM_InitStructure);       //³õÊ¼»¯Timer1    Timer0,Timer1,Timer2,Timer3,Timer4
  85   1        NVIC_Timer1_Init(ENABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
  86   1      
  87   1        //¶¨Ê±Æ÷2×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª1000HZ£¬ÖÐ¶Ïº¯Êý´ÓP6.5È¡·´Êä³ö500HZ·½²¨ÐÅºÅ.
  88   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;   //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_E
             -xt
  89   1        TIM_InitStructure.TIM_ClkOut    = DISABLE;        //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  90   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 1000);       //³õÖµ
  91   1        TIM_InitStructure.TIM_PS        = 0;          //8Î»Ô¤·ÖÆµÆ÷(n+1), 0~255, (×¢Òâ:²¢·ÇËùÓÐÏµÁÐ¶¼ÓÐ´Ë¼Ä´æÆ÷,ÏêÇéÇë
             -²é¿´Êý¾ÝÊÖ²á)
  92   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
  93   1        Timer_Inilize(Timer2,&TIM_InitStructure);       //³õÊ¼»¯Timer2    Timer0,Timer1,Timer2,Timer3,Timer4
  94   1        NVIC_Timer2_Init(ENABLE,NULL);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÎÞÓÅÏÈ¼¶
  95   1      
  96   1        //¶¨Ê±Æ÷3×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª100HZ£¬ÖÐ¶Ïº¯Êý´ÓP6.4È¡·´Êä³ö50HZ·½²¨ÐÅºÅ.
  97   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;  //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_E
             -xt
  98   1        TIM_InitStructure.TIM_ClkOut    = DISABLE;        //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  99   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / (100*12));   //³õÖµ
 100   1        TIM_InitStructure.TIM_PS        = 0;          //8Î»Ô¤·ÖÆµÆ÷(n+1), 0~255, (×¢Òâ:²¢·ÇËùÓÐÏµÁÐ¶¼ÓÐ´Ë¼Ä´æÆ÷,ÏêÇéÇë
             -²é¿´Êý¾ÝÊÖ²á)
 101   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
C51 COMPILER V9.60.0.0   CONFIG                                                            09/18/2025 19:01:26 PAGE 3   

 102   1        Timer_Inilize(Timer3,&TIM_InitStructure);       //³õÊ¼»¯Timer3    Timer0,Timer1,Timer2,Timer3,Timer4
 103   1        NVIC_Timer3_Init(ENABLE,NULL);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÎÞÓÅÏÈ¼¶
 104   1      
 105   1        //¶¨Ê±Æ÷4×ö16Î»×Ô¶¯ÖØ×°, ÖÜÆÚ10ms,ÖÐ¶ÏÆµÂÊÎª100HZ£¬100Ô¤·ÖÆµ..
 106   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;  //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_E
             -xt
 107   1        TIM_InitStructure.TIM_ClkOut    = DISABLE;        //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
 108   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / (100*12));   //³õÖµ
 109   1        TIM_InitStructure.TIM_PS        = 0;          //8Î»Ô¤·ÖÆµÆ÷(n+1), 0~255, (×¢Òâ:²¢·ÇËùÓÐÏµÁÐ¶¼ÓÐ´Ë¼Ä´æÆ÷,ÏêÇéÇë
             -²é¿´Êý¾ÝÊÖ²á)
 110   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
 111   1        Timer_Inilize(Timer4,&TIM_InitStructure);       //³õÊ¼»¯Timer4    Timer0,Timer1,Timer2,Timer3,Timer4
 112   1        NVIC_Timer4_Init(ENABLE,NULL);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÎÞÓÅÏÈ¼¶
 113   1      }
 114          
 115          void  UART_config(void)
 116          {
 117   1        COMx_InitDefine   COMx_InitStructure;         //½á¹¹¶¨Òå
 118   1      
 119   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //Ä£Ê½, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART
             -_9bit_BRTx
 120   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //Ñ¡Ôñ²¨ÌØÂÊ·¢ÉúÆ÷, BRT_Timer1, BRT_Timer2 (×¢Òâ: ´®¿Ú2
             -¹Ì¶¨Ê¹ÓÃBRT_Timer2)
 121   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //²¨ÌØÂÊ, Ò»°ã 110 ~ 115200
 122   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //½ÓÊÕÔÊÐí,   ENABLE»òDISABLE
 123   1        COMx_InitStructure.BaudRateDouble = DISABLE;      //²¨ÌØÂÊ¼Ó±¶, ENABLE»òDISABLE
 124   1        UART_Configuration(UART1, &COMx_InitStructure);   //³õÊ¼»¯´®¿Ú1 UART1,UART2,UART3,UART4
 125   1        NVIC_UART1_Init(ENABLE,Priority_1);   //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
 126   1      
 127   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //Ä£Ê½,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
 128   1      //  COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //Ñ¡Ôñ²¨ÌØÂÊ·¢ÉúÆ÷, BRT_Timer2 (×¢Òâ: ´®¿Ú2¹Ì¶¨Ê¹ÓÃBR
             -T_Timer2, ËùÒÔ²»ÓÃÑ¡Ôñ)
 129   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //²¨ÌØÂÊ,     110 ~ 115200
 130   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //½ÓÊÕÔÊÐí,   ENABLE»òDISABLE
 131   1        UART_Configuration(UART2, &COMx_InitStructure);   //³õÊ¼»¯´®¿Ú2 UART1,UART2,UART3,UART4
 132   1        NVIC_UART2_Init(ENABLE,Priority_1);   //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
 133   1      
 134   1        UART1_SW(UART1_SW_P30_P31);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
 135   1        UART2_SW(UART2_SW_P46_P47);   //UART2_SW_P10_P11,UART2_SW_P46_P47
 136   1      }
 137          /******************* ADÅäÖÃº¯Êý *******************/
 138          void  ADC_config(void)
 139          {
 140   1        ADC_InitTypeDef   ADC_InitStructure;    //½á¹¹¶¨Òå
 141   1      
 142   1        ADC_InitStructure.ADC_SMPduty   = 31;   //ADC Ä£ÄâÐÅºÅ²ÉÑùÊ±¼ä¿ØÖÆ, 0~31£¨×¢Òâ£º SMPDUTY Ò»¶¨²»ÄÜÉèÖÃÐ¡ÓÚ 
             -10£©
 143   1        ADC_InitStructure.ADC_CsSetup   = 0;    //ADC Í¨µÀÑ¡ÔñÊ±¼ä¿ØÖÆ 0(Ä¬ÈÏ),1
 144   1        ADC_InitStructure.ADC_CsHold    = 1;    //ADC Í¨µÀÑ¡Ôñ±£³ÖÊ±¼ä¿ØÖÆ 0,1(Ä¬ÈÏ),2,3
 145   1        ADC_InitStructure.ADC_Speed     = ADC_SPEED_2X16T;    //ÉèÖÃ ADC ¹¤×÷Ê±ÖÓÆµÂÊ ADC_SPEED_2X1T~ADC_SPEED_2X16
             -T
 146   1        ADC_InitStructure.ADC_AdjResult = ADC_RIGHT_JUSTIFIED;  //ADC½á¹ûµ÷Õû,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUSTIF
             -IED
 147   1        ADC_Inilize(&ADC_InitStructure);    //³õÊ¼»¯
 148   1        ADC_PowerControl(ENABLE);       //ADCµçÔ´¿ª¹Ø, ENABLE»òDISABLE
 149   1        NVIC_ADC_Init(DISABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Prio
             -rity_2,Priority_3
 150   1      }
 151          /************************ ¶¨Ê±Æ÷ÅäÖÃ ****************************/
C51 COMPILER V9.60.0.0   CONFIG                                                            09/18/2025 19:01:26 PAGE 4   

 152          /****************  I2C³õÊ¼»¯º¯Êý *****************/
 153          void  I2C_config(void)
 154          {
 155   1        I2C_InitTypeDef   I2C_InitStructure;
 156   1      
 157   1        I2C_InitStructure.I2C_Mode      = I2C_Mode_Master;  //Ö÷´ÓÑ¡Ôñ   I2C_Mode_Master, I2C_Mode_Slave
 158   1        I2C_InitStructure.I2C_Enable    = ENABLE;     //I2C¹¦ÄÜÊ¹ÄÜ,   ENABLE, DISABLE
 159   1        I2C_InitStructure.I2C_MS_WDTA   = DISABLE;      //Ö÷»úÊ¹ÄÜ×Ô¶¯·¢ËÍ,  ENABLE, DISABLE
 160   1        I2C_InitStructure.I2C_Speed     = 16;       //×ÜÏßËÙ¶È=Fosc/2/(Speed*2+4),      0~63
 161   1        I2C_Init(&I2C_InitStructure);
 162   1        NVIC_I2C_Init(I2C_Mode_Master,DISABLE,Priority_0);  //Ö÷´ÓÄ£Ê½, I2C_Mode_Master, I2C_Mode_Slave; ÖÐ¶ÏÊ¹ÄÜ,
             - ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Priority_2,Priority_3
 163   1      
 164   1        I2C_SW(I2C_P24_P25);          //I2C_P14_P15,I2C_P24_P25,I2C_P33_P32
 165   1      }
 166          /****************  RTC³õÊ¼»¯º¯Êý *****************/
 167          void  RTC_config(void)
 168          {
 169   1        RTC_InitTypeDef   RTC_InitStructure;
 170   1        RTC_InitStructure.RTC_Clock  = RTC_X32KCR;  //RTC Ê±ÖÓ, RTC_IRC32KCR, RTC_X32KCR
 171   1        RTC_InitStructure.RTC_Enable = ENABLE;      //RTC¹¦ÄÜÊ¹ÄÜ,   ENABLE, DISABLE
 172   1        RTC_InitStructure.RTC_Year   = 25;          //RTC Äê, 00~99, ¶ÔÓ¦2000~2099Äê
 173   1        RTC_InitStructure.RTC_Month  = 9;         //RTC ÔÂ, 01~12
 174   1        RTC_InitStructure.RTC_Day    = 15;          //RTC ÈÕ, 01~31
 175   1        RTC_InitStructure.RTC_Hour   = 11;          //RTC Ê±, 00~23
 176   1        RTC_InitStructure.RTC_Min    = 42;          //RTC ·Ö, 00~59
 177   1        RTC_InitStructure.RTC_Sec    = 55;          //RTC Ãë, 00~59
 178   1        RTC_InitStructure.RTC_Ssec   = 00;          //RTC 1/128Ãë, 00~127
 179   1      
 180   1        RTC_InitStructure.RTC_ALAHour= 11;          //RTC ÄÖÖÓÊ±, 00~23
 181   1        RTC_InitStructure.RTC_ALAMin = 44;          //RTC ÄÖÖÓ·Ö, 00~59
 182   1        RTC_InitStructure.RTC_ALASec = 00;          //RTC ÄÖÖÓÃë, 00~59
 183   1        RTC_InitStructure.RTC_ALASsec= 00;          //RTC ÄÖÖÓ1/128Ãë, 00~127
 184   1        RTC_Inilize(&RTC_InitStructure);
 185   1        NVIC_RTC_Init(RTC_ALARM_INT|RTC_SEC_INT,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, RTC_ALARM_INT/RTC_DAY_INT/RTC_HOUR_INT/
             -RTC_MIN_INT/RTC_SEC_INT/RTC_SEC2_INT/RTC_SEC8_INT/RTC_SEC32_INT/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Priority_2
             -,Priority_3
 186   1      }
 187          void SPI_config(void)
 188          {
 189   1        SPI_InitTypeDef   SPI_InitStructure;
 190   1      
 191   1        SPI_InitStructure.SPI_Enable    = ENABLE;       //SPIÆô¶¯    ENABLE, DISABLE
 192   1        SPI_InitStructure.SPI_SSIG      = ENABLE;       //Æ¬Ñ¡Î»     ENABLE, DISABLE
 193   1        SPI_InitStructure.SPI_FirstBit  = SPI_MSB;        //ÒÆÎ»·½Ïò   SPI_MSB, SPI_LSB
 194   1        SPI_InitStructure.SPI_Mode      = SPI_Mode_Master;    //Ö÷´ÓÑ¡Ôñ   SPI_Mode_Master, SPI_Mode_Slave
 195   1        SPI_InitStructure.SPI_CPOL      = SPI_CPOL_High;    //Ê±ÖÓÏàÎ»   SPI_CPOL_High,   SPI_CPOL_Low
 196   1        SPI_InitStructure.SPI_CPHA      = SPI_CPHA_2Edge;   //Êý¾Ý±ßÑØ   SPI_CPHA_1Edge,  SPI_CPHA_2Edge
 197   1        SPI_InitStructure.SPI_Speed     = SPI_Speed_16;     //SPIËÙ¶È    SPI_Speed_4,SPI_Speed_16,SPI_Speed_64,SPI_
             -Speed_2/SPI_Speed_32
 198   1        SPI_Init(&SPI_InitStructure);
 199   1        NVIC_SPI_Init(ENABLE,Priority_3);   //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Prior
             -ity_2,Priority_3
 200   1        
 201   1        SPI_SW(SPI_P54_P40_P41_P43);  //SPI_P12_P13_P14_P15,SPI_P22_P23_P24_P25,SPI_P54_P40_P41_P43,SPI_P35_P34_P3
             -3_P32
 202   1        //  SPI_SCK = 0;    // set clock to low initial state
 203   1        //  SPI_SI = 1;
 204   1      }/****************  SPI³õÊ¼»¯º¯Êý *****************/


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   CONFIG                                                            09/18/2025 19:01:26 PAGE 5   

   CODE SIZE        =    691    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      50
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
