C51 COMPILER V9.60.0.0   ENCODER                                                           09/15/2025 11:19:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ENCODER
OBJECT MODULE PLACED IN .\Objects\encoder.obj
COMPILER INVOKED BY: D:\work\KEIL\ARM\C51\BIN\C51.EXE DRIVER\encoder.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\APP;.\DRIVER;.\
                    -STC8HLib) DEBUG OBJECTEXTEND PRINT(.\Listings\encoder.lst) TABS(2) OBJECT(.\Objects\encoder.obj)

line level    source

   1          #include  "STC8G_H_GPIO.h"
   2          #include "type_def.h"
   3          #include  "STC8G_H_Delay.h"
   4          #include "BEEP.h"
   5          #include  "STC8G_H_Exti.h"
   6          //#define PIN_ENCODER_A    P34    
   7          //#define PIN_ENCODER_B    P35
   8          //#define PIN_ENCODER_KEY  P36
   9          //extern u32 count;
  10          //u8 encoder_count1;
  11          //u8 encoder_count2;
  12          //u8 current_A ;
  13          //u8 keyval;
  14          ////extern u8 last_A_state ;
  15          ///**
  16          //***********************************************************
  17          //* @brief   1*4单按键显示值
  18          //* @param 
  19          //* @return  返回按键的值
  20          //***********************************************************
  21          //*/
  22          //void encoder()
  23          //{   
  24          //  current_A= P34;
  25          //    if (current_A != last_A_state)
  26          //    {
  27          //      // 在A相变化的时刻，读取B相的状态
  28          //      if (current_A == 0) 
  29          //        { // 如果检测的是下降沿
  30          //          if (P35 == 0) 
  31          //            {
  32          //            encoder_count1++; // 顺时针，B相为低
  33          //            }
  34          //          else {
  35          //            encoder_count2++; // 逆时针，B相为高
  36          //          }
  37          //        }
  38          //      // 更新上一次的状态
  39          //      last_A_state = current_A;
  40          //    }
  41          //  //  keyval=encoder_count/20;
  42          //    if(encoder_count1>=0)//一直正转
  43          //    {  
  44          //      keyval=encoder_count1/20;
  45          //    }
  46          //    if((encoder_count1>0)&&(encoder_count2>0))//先正转x圈后反转
  47          //    {
  48          //      keyval=(encoder_count1-encoder_count2)/20;
  49          //    }
  50          //    if(encoder_count2>encoder_count1)//直接反转
  51          //    {
  52          //      keyval=(encoder_count2-encoder_count1)/20;
  53          //    }
  54          ////    else if(encoder_count1<0)
C51 COMPILER V9.60.0.0   ENCODER                                                           09/15/2025 11:19:29 PAGE 2   

  55          ////      keyval=(encoder_count1)/20;
  56          //       
  57          ////    if(KEY1 == 0)
  58          ////    {
  59          ////      delay_ms(10);
  60          ////      if(KEY1 == 0)
  61          ////      {
  62          ////        count=0;
  63          ////        while(!KEY1);
  64          ////      }
  65          ////      BeepMs(10);
  66          ////    }
  67          //  if(P36 == 0)
  68          //  {
  69          //    delay_ms(10);
  70          //    if(P36 == 0)
  71          //    {
  72          //      encoder_count1=0;
  73          //      encoder_count2=0;
  74          //    }
  75          //    BeepMs(10);
  76          //    
  77          //  } 
  78          //} 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
